[tool.poetry]
name = "pyconfman"
version = "0.2.0"
description = ""
authors = ["Lars Liedtke <lars@familie-liedtke.net>"]

[tool.poetry.dependencies]
python = "^3.10"
tomli = { version = "^2.0.1", python = "<3.11" }
tox = "^4"
black = "*"
pytest = "*"
mypy = "^1"

[tool.poetry.dev-dependencies]
pylint = "*"
deepdiff = "*"
tox = "^3"
black = "*"
mypy = "^1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.tox]
legacy_tox_ini = """

[tox]
requires =
    pylint
    pytest
    black
    mypy
skip_missing_interpreters = true
envlist =
    py{39,310,311}-{black,lint,mypy,unittest,integration_test}
isolated_build = true

[testenv]
passenv=PYTHONPATH

[testenv:py{39,310,311}-black]
allowlist_externals =
    black
commands = black --check .
[testenv:py{39,310,311}-lint]
allowlist_externals =
    pylint
commands = pylint pyconfman
[testenv:py{39,310,311}-mypy]
allowlist_externals =
    mypy
commands = mypy .
[testenv:py{39,310,311}-unittest]
allowlist_externals =
    pytest
commands =  pytest -vvm unit .
[testenv:py{39,310,311}-integration_test]
allowlist_externals =
    pytest
commands = pytest -vvm integration .
"""

[tool.pylint.main]
# Add files or directories matching the regular expressions patterns to the
# ignore-list. The regex matches against paths and can be in Posix or Windows
# format. Because '\' represents the directory delimiter on Windows systems, it
# can't be used as an escape character.
ignore-paths = [".*\\\\tests\\\\.*|.*/tests/.*"]

[tool.pylint.design]
# Minimum number of public methods for a class (see R0903).
min-public-methods = 0

[tool.pylint.variables]
init-import = false

[tool.mypy]
exclude = ["tests/*"]
show_error_context = true
pretty = true

[tool.pytest.ini_options]
markers = ["unit","integration"]
